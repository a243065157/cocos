{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "cc",
    "Class",
    "extends",
    "Component",
    "properties",
    "jumpHeight",
    "jumpDuration",
    "maxMoveSpeed",
    "accel",
    "onLoad",
    "jumpAction",
    "setJumpAction",
    "node",
    "runAction",
    "accLeft",
    "accRight",
    "xSpeed",
    "setInputControl",
    "jumpUp",
    "moveBy",
    "p",
    "easing",
    "easeCubicActionOut",
    "jumpDown",
    "easeCubicActionIn",
    "repeatForever",
    "sequence",
    "self",
    "eventManager",
    "addListener",
    "event",
    "EventListener",
    "KEYBOARD",
    "onKeyPressed",
    "keyCode",
    "KEY",
    "a",
    "d",
    "onKeyReleased",
    "update",
    "dt",
    "Math",
    "abs",
    "x"
  ],
  "mappings": ";;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY,CAFJ;AAGR;AACAC,sBAAc,CAJN;AAKR;AACAC,sBAAc,CANN;AAOR;AACAC,eAAO;AARC,KAHP;;AAcL;AACAC,YAAQ,kBAAY;AACf;AACD,aAAKC,UAAL,GAAkB,KAAKC,aAAL,EAAlB;AACA,aAAKC,IAAL,CAAUC,SAAV,CAAoB,KAAKH,UAAzB;;AAEA;AACA,aAAKI,OAAL,GAAe,KAAf;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA;AACA,aAAKC,MAAL,GAAc,CAAd;;AAEA;AACA,aAAKC,eAAL;AACH,KA5BI;AA6BJN,mBAAe,yBAAY;AACxB;AACA,YAAIO,SAASlB,GAAGmB,MAAH,CAAU,KAAKb,YAAf,EAA6BN,GAAGoB,CAAH,CAAK,CAAL,EAAQ,KAAKf,UAAb,CAA7B,EAAuDgB,MAAvD,CAA8DrB,GAAGsB,kBAAH,EAA9D,CAAb;AACA;AACA,YAAIC,WAAWvB,GAAGmB,MAAH,CAAU,KAAKb,YAAf,EAA6BN,GAAGoB,CAAH,CAAK,CAAL,EAAQ,CAAC,KAAKf,UAAd,CAA7B,EAAwDgB,MAAxD,CAA+DrB,GAAGwB,iBAAH,EAA/D,CAAf;AACA;AACA,eAAOxB,GAAGyB,aAAH,CAAiBzB,GAAG0B,QAAH,CAAYR,MAAZ,EAAoBK,QAApB,CAAjB,CAAP;AACH,KApCI;AAqCLN,qBAAiB,2BAAY;AACzB,YAAIU,OAAO,IAAX;AACA;AACA3B,WAAG4B,YAAH,CAAgBC,WAAhB,CAA4B;AACxBC,mBAAO9B,GAAG+B,aAAH,CAAiBC,QADA;AAExB;AACAC,0BAAc,sBAASC,OAAT,EAAkBJ,KAAlB,EAAyB;AACnC,wBAAOI,OAAP;AACI,yBAAKlC,GAAGmC,GAAH,CAAOC,CAAZ;AACIT,6BAAKb,OAAL,GAAe,IAAf;AACAa,6BAAKZ,QAAL,GAAgB,KAAhB;AACA;AACJ,yBAAKf,GAAGmC,GAAH,CAAOE,CAAZ;AACIV,6BAAKb,OAAL,GAAe,KAAf;AACAa,6BAAKZ,QAAL,GAAgB,IAAhB;AACA;AARR;AAUH,aAduB;AAexB;AACAuB,2BAAe,uBAASJ,OAAT,EAAkBJ,KAAlB,EAAyB;AACpC,wBAAOI,OAAP;AACI,yBAAKlC,GAAGmC,GAAH,CAAOC,CAAZ;AACIT,6BAAKb,OAAL,GAAe,KAAf;AACA;AACJ,yBAAKd,GAAGmC,GAAH,CAAOE,CAAZ;AACIV,6BAAKZ,QAAL,GAAgB,KAAhB;AACA;AANR;AAQH;AAzBuB,SAA5B,EA0BGY,KAAKf,IA1BR;AA2BH,KAnEI;AAoEL;AACA2B,YAAQ,gBAAUC,EAAV,EAAc;AACjB;AACD,YAAI,KAAK1B,OAAT,EAAkB;AACd,iBAAKE,MAAL,IAAe,KAAKR,KAAL,GAAagC,EAA5B;AACH,SAFD,MAEO,IAAI,KAAKzB,QAAT,EAAmB;AACtB,iBAAKC,MAAL,IAAe,KAAKR,KAAL,GAAagC,EAA5B;AACH;AACD;AACA,YAAKC,KAAKC,GAAL,CAAS,KAAK1B,MAAd,IAAwB,KAAKT,YAAlC,EAAiD;AAC7C;AACA,iBAAKS,MAAL,GAAc,KAAKT,YAAL,GAAoB,KAAKS,MAAzB,GAAkCyB,KAAKC,GAAL,CAAS,KAAK1B,MAAd,CAAhD;AACH;;AAED;AACA,aAAKJ,IAAL,CAAU+B,CAAV,IAAe,KAAK3B,MAAL,GAAcwB,EAA7B;AACH;AApFI,CAAT",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n         // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        this.setInputControl();\r\n    },\r\n     setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 不断重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\r\n    },\r\n    setInputControl: function () {\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n            onKeyPressed: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                }\r\n            },\r\n            // 松开按键时，停止向该方向的加速\r\n            onKeyReleased: function(keyCode, event) {\r\n                switch(keyCode) {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                }\r\n            }\r\n        }, self.node);\r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n         // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    }\r\n});\r\n"
  ]
}